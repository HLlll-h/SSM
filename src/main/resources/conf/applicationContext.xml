<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
                <!--Spring配置文件-->


    <!--导入jdbc.properties-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/><!--resources目录下-->

    <!--声明德鲁伊数据源-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!--set注入给DruidDataSource提供连接数据库信息-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
    </bean>

    <!--获取SqlSessionFactory 读取mybatis主配置文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <!--mybatis主配置文件的位置-->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>


    <!--获取SqlSession 创建dao包下的所有dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定SqlSessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描这个包的所有接口,把每个接口都执行一次getMapper方法,得到每个接口的dao对象-->
        <property name="basePackage" value="com.whh.dao"/>
        <!--生成的dao对象默认id值是接口名的首字母小写 如studentDao-->
    </bean>


    <!--声明Spring事务(使用Spring的事务注解管理事务、使用AspectJ的AOP配置管理事务)-->
    <!--1.声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--连接的数据库,指定数据源-->
        <property name="dataSource" ref="myDataSource"/>
    </bean>

    <!--2.开启事务注解驱动,告诉Spring使用注解管理事务,创建代理对象-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--组件扫描器-->
    <context:component-scan base-package="com.whh.service.impl" />



</beans>